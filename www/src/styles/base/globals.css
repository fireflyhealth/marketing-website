:root {
  --container-lg-padding: 48px;
  --container-md-padding: 36px;
  --container-sm-padding: 16px;
  --grid-margin-lg: min(3.33vw, 64px);
  --grid-margin-sm: 16px;
}

html {
  scroll-behavior: smooth;
}

body {
  max-width: 100vw;
  overflow-x: hidden;
}

main {
  position: relative;
  z-index: 0;
}

.ContentArea {
  /* Add spacing between components  */
  > div + div {
    margin-top: theme('spacing.8');
  }
  /* Last component should not have spacing  */
  > div:last-child {
    margin-top: 0;
  }

  /* Any component with this class name will not have spacing below  */
  > .remove-between-component-margin {
    margin-top: 0;
  }
}

svg {
  .icon-base,
  .icon-overlap {
    fill: currentColor;
  }
  .icon-base-stroke,
  .icon-overlap-stroke {
    stroke: currentColor;
  }
}

button:disabled,
button[disabled] {
  svg {
    .icon-base {
      fill: theme('colors.grey');
    }
    .icon-overlap {
      fill: theme('colors.grey-medium');
    }
  }
}

img {
  max-width: 100%;
}
/* base styles for SimpleIcon wrapper */
.icon-wrapper {
  width: 1em;
  color: theme('colors.midnight');

  svg {
    width: 100%;
    fill: currentColor;
  }
}

/* Video */

.video iframe,
.video object,
.video embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Hides caption from posterImage within video component */
#video-component #video-poster-image figcaption {
  display: none;
}

/*
 * Reference:
 * https://www.figma.com/file/2ghg22zsQKeysX5YUcDP5d/%5BFirefly%5D-Design-System?type=design&node-id=3801%3A6956&mode=dev
 */

.font-size-1 {
  font-size: 96px;
  line-height: 90%;
  letter-spacing: -0.04em;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 120px;
  }
  @screen lg {
    font-size: min(192px, 10vw);
  }
}

.font-size-2 {
  font-size: 52px;
  line-height: 90%;
  letter-spacing: -0.04em;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 72px;
  }
  @screen lg {
    font-size: min(140px, 7.25vw);
  }
}

.font-size-3 {
  font-size: 48px;
  line-height: 90%;
  letter-spacing: -0.03em;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 64px;
  }
  @screen lg {
    font-size: min(108px, 5.625vw);
  }
}

.font-size-4 {
  font-size: 32px;
  letter-spacing: -0.02em;
  line-height: 100%;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 43px;
  }
  @screen lg {
    font-size: 54px;
  }
}

.font-size-5 {
  font-size: 24px;
  line-height: 115%;
  letter-spacing: -0.015em;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 34px;
  }
  @screen lg {
    font-size: 44px;
  }

  &--quote {
    @apply font-size-5;
    @apply font-trust;
    font-weight: 400;
    letter-spacing: -0.02em;
  }
}

.font-size-6 {
  font-size: 20px;
  line-height: 120%;
  letter-spacing: -0.01em;
  font-weight: 500;
  text-wrap: balance;

  @screen md {
    font-size: 26px;
  }
  @screen lg {
    font-size: 32px;
  }

  &--quote {
    @apply font-size-6;
    @apply font-trust;
    font-weight: 400;
    letter-spacing: -0.01em;
  }
}

.font-size-7 {
  font-size: 18px;
  line-height: 120%;
  font-weight: 400;
  text-wrap: balance;

  @screen md {
    font-size: 21px;
  }
  @screen lg {
    font-size: 24px;
  }
}

.font-size-8 {
  font-size: 16px;
  line-height: 140%;
  font-weight: 400;
  text-wrap: balance;

  @screen md {
    font-size: 18px;
  }

  &--cta {
    @apply font-size-8;
    line-height: 100%;
  }
}

.font-size-9 {
  font-size: 14px;
  line-height: 140%;
  letter-spacing: 0.02em;
  font-weight: 500;
  text-wrap: balance;
}

.font-size-10 {
  font-size: 12px;
  line-height: 140%;
  letter-spacing: 0.02em;
  font-weight: 400;
  text-wrap: balance;
}

/**
 * General theme styles
 */

:root,
.theme-white {
  --bg-color: theme('colors.white');
  --text-color-primary: theme('colors.midnight');
  --text-color-secondary: theme('colors.grey-darker');
  --text-color-decorative: theme('colors.sienna');
  --border-color: theme('colors.grey-medium');

  --cta-text-color-primary: theme('colors.midnight');
  --cta-bg-color-primary: theme('colors.yellow');
  --cta-text-color-secondary: theme('colors.midnight');
  --cta-bg-color-secondary: theme('colors.grey');
  --cta-border-color: theme('colors.midnight');

  --icon-base: theme('colors.yellow');
  --icon-overlap: theme('colors.yellow-dark');
}

.theme-grey {
  --bg-color: theme('colors.grey');
  --text-color-primary: theme('colors.midnight');
  --text-color-secondary: theme('colors.grey-darker');
  --text-color-decorative: theme('colors.sienna');
  --border-color: theme('colors.grey-dark');

  --cta-text-color-primary: theme('colors.midnight');
  --cta-bg-color-primary: theme('colors.yellow');
  --cta-text-color-secondary: theme('colors.midnight');
  --cta-bg-color-secondary: theme('colors.grey-medium');
  --cta-border-color: theme('colors.midnight');

  --icon-base: theme('colors.yellow');
  --icon-overlap: theme('colors.orange');
}

.theme-sienna {
  --bg-color: theme('colors.sienna');
  --text-color-primary: theme('colors.yellow-light');
  --text-color-secondary: theme('colors.yellow-light-70');
  --text-color-decorative: theme('colors.yellow');
  --border-color: theme('colors.yellow-light-70');

  --cta-text-color-primary: theme('colors.midnight');
  --cta-bg-color-primary: theme('colors.yellow');
  --cta-text-color-secondary: theme('colors.yellow-light');
  --cta-bg-color-secondary: theme('colors.sienna-dark');
  --cta-border-color: theme('colors.yellow-light');

  --icon-base: theme('colors.yellow');
  --icon-overlap: theme('colors.orange');
}

.theme-midnight {
  --bg-color: theme('colors.midnight');
  --text-color-primary: theme('colors.yellow-light');
  --text-color-secondary: theme('colors.yellow-light-70');
  --text-color-decorative: theme('colors.sky');
  --border-color: theme('colors.grey-darker');

  --cta-text-color-primary: theme('colors.midnight');
  --cta-bg-color-primary: theme('colors.yellow');
  --cta-text-color-secondary: theme('colors.yellow-light');
  --cta-bg-color-secondary: theme('colors.midnight-light');
  --cta-border-color: theme('colors.yellow-light');

  --icon-base: theme('colors.sky-medium');
  --icon-overlap: theme('colors.sky');
}

.theme-sky {
  --bg-color: theme('colors.sky');
  --text-color-primary: theme('colors.midnight');
  --text-color-secondary: theme('colors.midnight-70');
  --text-color-decorative: theme('colors.midnight');
  --border-color: theme('colors.midnight-30');

  --cta-text-color-primary: theme('colors.midnight');
  --cta-bg-color-primary: theme('colors.yellow');
  --cta-text-color-secondary: theme('colors.midnight');
  --cta-bg-color-secondary: theme('colors.sky-light');
  --cta-border-color: theme('colors.midnight');

  --icon-base: theme('colors.sky-medium');
  --icon-overlap: theme('colors.sky-dark');
}

/* "tailwindify" these theme classnames - i.e. make them usable with
 * modifiers, i.e. "md:theme-bg-color", "hover:theme-text-color-primary" */
@layer utilities {
  .theme-bg-color {
    background-color: var(--bg-color);
  }
  .theme-border-color {
    border-color: var(--border-color);
  }
  .theme-text-color-primary {
    color: var(--text-color-primary);
  }
  .theme-text-color-secondary {
    color: var(--text-color-secondary);
  }
  .theme-text-color-decorative {
    color: var(--text-color-decorative);
  }
  .theme-border-color {
    border-color: var(--border-color);
  }
  .theme-bg-color-primary {
    background-color: var(--cta-bg-color-primary);
  }
  .theme-bg-color-secondary {
    color: var(--cta-bg-color-secondary);
  }
  .theme-cta-text-color-primary {
    color: var(--cta-text-color-primary);
  }
  .theme-cta-text-color-secondary {
    color: var(--cta-text-color-secondary);
  }
  .theme-cta-bg-color-primary {
    background-color: var(--cta-bg-color-primary);
  }
  .theme-cta-bg-color-secondary {
    background-color: var(--cta-bg-color-secondary);
  }
}

.theme-icon-overlap {
  color: var(--icon-overlap);
}

svg {
  .icon-base {
    fill: var(--icon-base);
  }

  .icon-overlap {
    fill: var(--icon-overlap);
  }
}

/**
 * CTA
 */

/* suppress focus ring on focuaable elements. We are adding focus style individually. */
*:focus {
  outline: none;
}
/* Primary CTA styles are shared across themes
 * (excluding some focus states) */
.cta {
  @apply font-size-8;
  border-radius: 48px;
  cursor: pointer;
  height: 40px;
  text-align: center;
  white-space: nowrap;
  color: var(--cta-text-color-primary);
  background-color: var(--cta-bg-color-primary);
  border: 3px solid transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  padding: 0 2.5rem;

  @screen md {
    height: 48px;
    padding: 0 3rem;
  }

  &:hover {
    background-color: theme('colors.yellow-light');
  }

  [data-whatintent='keyboard'] &:focus {
    border-color: var(--cta-border-color);
    outline: none;
  }

  &--disabled,
  &:disabled {
    pointer-events: none;
    opacity: 0.3;
    background-color: var(--border-color);
  }

  &--secondary {
    color: var(--cta-text-color-secondary);
    background-color: var(--cta-bg-color-secondary);

    &:hover {
      opacity: 0.7;
      background-color: var(--cta-bg-color-secondary);
    }
  }

  &--outlined {
    border-width: 1px;
    color: var(--cta-text-color-secondary);
    background-color: var(--bg-color);
    border-color: var(--border-color);

    &:disabled {
      background-color: var(--bg-color);
    }

    [data-whatintent='keyboard'] &:focus {
      border-width: 4px;
    }

    &:hover {
      background-color: var(--bg-color);
      border-color: var(--cta-border-color);
    }

    &.cta--active {
      color: var(--bg-color);
      background-color: var(--text-color-primary);
      border-color: transparent;
    }
  }

  &--textLink {
    transition: all 500ms ease;
    background-color: transparent;
    color: var(--text-color-primary);
    border-color: var(--cta-border-color);
    border-width: 0;
    border-bottom: 1px solid;
    height: 26px;
    border-radius: 0;
    padding: 0;

    @screen md {
      height: 24px;
    }

    &:hover {
      background-color: transparent;
      border-color: var(--cta-bg-color-primary);
    }

    &:disabled {
      opacity: 0.3;
    }

    [data-whatintent='keyboard'] &:focus {
      border-color: transparent;
      background-color: var(--cta-bg-color-primary);
      color: var(--cta-text-color-primary);
    }
  }
}

.simple-text-link {
  transition: all 500ms ease;
  background-color: transparent;
  color: var(--text-color-primary);
  border-bottom: 1px solid;
  border-color: transparent;

  &:hover {
    border-color: var(--cta-border-color);
  }

  [data-whatintent='keyboard'] &:focus {
    background-color: var(--cta-bg-color-primary);
  }
}

.simple-text-link--with-underline {
  transition: all 500ms ease;
  background-color: transparent;
  color: var(--text-color-primary);
  border-bottom: 1px solid;
  border-color: var(--text-color-primary);

  &:hover {
    border-color: transparent;
  }

  [data-whatintent='keyboard'] &:focus {
    background-color: var(--cta-bg-color-primary);
  }
}

.icon-link {
  transition: all 500ms ease;
  background-color: transparent;

  [data-whatintent='keyboard'] &:focus {
    background-color: var(--cta-bg-color-primary);
  }
}

.element-focus {
  transition: all 500ms ease;
  border-color: transparent;
  border-radius: 8px;

  [data-whatintent='keyboard'] &:focus {
    outline: 3px solid;
    outline-color: var(--cta-border-color);
  }
}

.container-max-width {
  max-width: 1920px;
  margin-left: auto;
  margin-right: auto;
}

.container-padding {
  padding: 0 var(--container-sm-padding);

  @screen md {
    padding: 0 var(--container-md-padding);
  }

  @screen lg {
    padding: 0 var(--container-lg-padding);
  }
}

/* Use this className to expand content outside of the
 * container-padding padding area. (I.e. if you want the
 * background of an element to go to the edges of the
 * container-max-width) */
.container-padding-bleed {
  width: calc(100% + var(--container-sm-padding) + var(--container-sm-padding));
  margin-left: calc(0px - var(--container-sm-padding));
  /* re-apply standard container padding (inner content will now match
   * the padding of the main column) */
  padding: var(--container-sm-padding);

  @screen md {
    width: calc(
      100% + var(--container-md-padding) + var(--container-md-padding)
    );
    margin-left: calc(0px - var(--container-md-padding));
    padding: var(--container-md-padding);
  }

  @screen lg {
    width: calc(
      100% + var(--container-lg-padding) + var(--container-lg-padding)
    );
    margin-left: calc(0px - var(--container-lg-padding));
    padding: var(--container-lg-padding);
  }
}

.container-padding-bleed--margin-only {
  width: calc(100% + var(--container-sm-padding) + var(--container-sm-padding));
  margin-left: calc(0px - var(--container-sm-padding));

  @screen md {
    width: calc(
      100% + var(--container-md-padding) + var(--container-md-padding)
    );
    margin-left: calc(0px - var(--container-md-padding));
  }

  @screen lg {
    width: calc(
      100% + var(--container-lg-padding) + var(--container-lg-padding)
    );
    margin-left: calc(0px - var(--container-lg-padding));
  }
}

.container-padding-bleed-mobile-only {
  width: calc(100% + var(--container-sm-padding) + var(--container-sm-padding));
  margin-left: calc(0px - var(--container-sm-padding));
  /* re-apply standard container padding (inner content will now match
   * the padding of the main column) */
  padding: var(--container-sm-padding);

  @screen md {
    width: 100%;
    margin-left: initial;
  }
}

.container-padding-bleed--margin-only-mobile-only {
  width: calc(100% + var(--container-sm-padding) + var(--container-sm-padding));
  margin-left: calc(0px - var(--container-sm-padding));

  @screen md {
    width: 100%;
    margin-left: initial;
  }
}

#hubspot-form-wrapper fieldset {
  width: 100%;
  max-width: unset;
  margin: 0 0 32px 0;
}

#hubspot-form-wrapper {
  input,
  select,
  textarea {
    width: 100%;
    background: var(--cta-bg-color-secondary);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 14px 16px;
    margin-top: 12px;
  }

  input::placeholder,
  select::placeholder,
  textarea::placeholder {
    color: var(--text-color-primary);
  }

  input:focus,
  select:focus,
  textarea:focus {
    outline: auto !important;
    border-color: var(--cta-border-color);
    border: 3px solid;
  }

  label {
    @apply font-size-10 font-roobert;
  }
}

#hubspot-form-wrapper {
  .hs_firstname,
  .hs-firstname,
  .hs_lastname,
  .hs-lastname {
    width: 50%;
    display: inline-block;
  }
}

#hubspot-form-wrapper {
  .hs_submit,
  .hs-submit {
    input,
    select {
      width: auto;
      margin: 0;
      padding: 14px 48px;
      background: theme('colors.yellow');
      border: none;
      border-radius: 100px;
    }
  }

  .submitted-message {
    padding: 172px 14px;
    color: var(--text-color-decorative);
    font-family: theme('fontFamily.trust');
    font-size: 20px;
    font-style: normal;
    font-weight: 400;
    line-height: 120%; /* 24px */
    letter-spacing: -0.2px;

    @media screen and (min-width: calc(theme('screens.sm') + 1px)) {
      font-size: 26px;
      line-height: 115%; /* 29.9px */
      letter-spacing: -0.26px;
    }

    @media screen and (min-width: calc(theme('screens.md') + 1px)) {
      font-size: 32px;
      letter-spacing: -0.32px;
    }
  }
}

.Navigation__link-style {
  @apply font-size-5;

  @screen lg {
    @apply font-size-8;
  }
}
